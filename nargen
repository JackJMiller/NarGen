#!/bin/bash

ShowHelpPage() {
	echo
	echo "Options:"
	echo "  new-world WORLD_NAME       configure a new world"
	echo "  generate CONFIG_FILE       generate terrain world according to config file"
	echo "  delete-world WORLD_NAME    delete configuration files for world"
	echo "  list                       list all world configurations"
	echo "  -h, --help                 show this page"
}

ConfigureNewWorld() {
	cp -r res/sample_worlds/Rainworld/ configs/worlds/$1/
}

if [ $# -eq 1 ] && [[ "$1" == "--help" || "$1" == "-h" ]] || [ $# -eq 0 ]; then
	cat res/ascii_art.txt
	ShowHelpPage

elif [[ $# -ge 1 && "$1" == "new-world" ]]; then
	if [ $# -lt 2 ]; then
		echo "Invalid arguments: No world name specified"
		ShowHelpPage
	elif [ -d "configs/worlds/$2" ]; then
		echo "Error: A world named $2 already exists"
	else
		ConfigureNewWorld $2
	fi

elif [[ $# -ge 1 && "$1" == "generate" ]]; then
	if [ $# -lt 2 ]; then
		echo "Invalid arguments: No config file specified"
		ShowHelpPage
	elif [ -d "configs/worlds/$2/" ]; then
		echo "Creating terrain from $2"
		python3 main.py $2
	else
		echo "Error: Cannot find world named $2"
	fi

elif [[ $# -ge 1 && "$1" == "delete-world" ]]; then
	if [ $# -lt 2 ]; then
		echo "Invalid arguments: No world name specified"
		ShowHelpPage
	elif [ -d "configs/worlds/$2" ]; then
		rm -r configs/worlds/$2
		echo "Deleted world $2"
	else
		echo "Error: Cannot find world named $2"
	fi

elif [[ $# -eq 1 && "$1" == "list" ]]; then

	ls configs/worlds/

else
	echo "Invalid arguments"
	ShowHelpPage
fi
