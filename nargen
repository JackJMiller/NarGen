#!/bin/bash

ConfigureNewWorld() {
    cp -r res/sample_worlds/$2/ worlds/$1/
    mkdir -p worlds/$1/GENERATED/chunks/ worlds/$1/GENERATED/images/
    echo New world saved at worlds/$1/
}

if [ $# -eq 1 ] && [[ "$1" == "--help" || "$1" == "-h" ]] || [ $# -eq 0 ]; then

    cat res/ascii_art.txt
    cat res/help_page.txt

elif [[ $# -eq 3 && "$1" == "new-world" ]]; then

    if [ -d "worlds/$2/" ]; then
        echo "Error: A world named $2 already exists"
        exit 1
    elif [ ! -d "res/sample_worlds/$3/" ]; then
        echo "Error: Could not find sample world named $3"
        exit 1
    else
        ConfigureNewWorld $2 $3
    fi

elif [[ $# -eq 2 && "$1" == "generate-and-render" ]]; then

    nargen generate $2 && nargen render $2

elif [[ $# -eq 2 && "$1" == "generate" ]]; then

    if [ $# -lt 2 ]; then
        echo "Invalid arguments: No config file specified"
        cat res/help_page.txt
    elif [ -d "worlds/$2/" ]; then
        nargen empty-world $2
        if [ $# -ge 3 ]; then
            if [ $3 == "--no-rendering" ]; then
                node main.js generate $2 0
            else
                echo "Invalid arguments: Cannot recognise option $3"
                cat res/help_page.txt
            fi
        else
            node main.js generate $2 1
        fi

    else
        echo "Error: Cannot find world named $2"
        exit 1
    fi

elif [[ $# -ge 1 && "$1" == "empty-world" ]]; then

    if [ $# -lt 2 ]; then
        echo "Invalid arguments: No world name specified"
        cat res/help_page.txt
    elif [ -d "worlds/$2/" ]; then
        rm -rf worlds/$2/GENERATED/*
        mkdir worlds/$2/GENERATED/chunks/ worlds/$2/GENERATED/images/
        echo "Emptied world $2"
    else
        echo "Error: Cannot find world named $2"
        exit 1
    fi

elif [[ $# -ge 1 && "$1" == "delete-world" ]]; then

    if [ $# -lt 2 ]; then
        echo "Invalid arguments: No world name specified"
        cat res/help_page.txt
    elif [ -d "worlds/$2/" ]; then
        rm -rf worlds/$2/
        echo "Deleted world $2"
    else
        echo "Error: Cannot find world named $2"
        exit 1
    fi

elif [[ $# -eq 2 && "$1" == "build" ]]; then

    nargen generate $2 && nargen render $2

elif [[ $# -eq 2 && "$1" == "render" ]]; then

    if [ -d "worlds/$2/" ]; then
        if [ -f "worlds/$2/GENERATED/WORLD_INFO.json" ]; then
            python3 main.py render $2
            viewnior worlds/$2/GENERATED/images/game.png > /dev/null 2>&1
        else
            echo "Error: A world named $2 is found but is not fully rendered. Execute 'nargen generate $2' to generate the world."
        fi
    else
        echo "Error: Cannot find world named $2. Execute 'nargen generate $2' to generate the world."
        exit 1
    fi

elif [[ $# -eq 2 && "$1" == "view" ]]; then

    if [ -d "worlds/$2/" ]; then
        viewnior worlds/$2/GENERATED/images/ > /dev/null 2>&1
    else
        echo "Error: Cannot find world named $2."
        exit 1
    fi

elif [[ $# -eq 1 && "$1" == "list" ]]; then

    ls worlds/

elif [[ $# -eq 1 && "$1" == "list-sample-worlds" ]]; then

    ls res/sample_worlds/

elif [[ $# -eq 1 && "$1" == "install" ]]; then

    mkdir worlds/

else

    echo "Invalid arguments"
    cat res/help_page.txt

fi
